name: Build, Release, and Push Docker Image

on:
  push:
    branches: [ "master" ]
  release:
    types: [ created ]  # Trigger when a new release is created
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run unit tests and generate report
        run: dotnet test --logger "trx;LogFileName=test_results.trx" --results-directory ./TestResults

      - name: Upload test results
        uses: dorny/test-reporter@v1
        with:
          name: Test Results
          path: ./TestResults/test_results.trx
          reporter: dotnet-trx

      - name: Set environment variable with date
        run: echo "DATE_TAG=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        run: |
          TAG_NAME=${{ env.DATE_TAG }}
          RESPONSE=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\": \"${TAG_NAME}\", \"name\": \"Release ${TAG_NAME}\", \"draft\": false, \"prerelease\": false}")

          echo "RELEASE_URL=$(echo $RESPONSE | jq -r .html_url)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'  # Only run when a release is created

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Application/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.DATE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
